EVSL_DIR      = $(GITHUB_WORKSPACE)/submodules/pEVSL
LIBEVSL       = -L$(EVSL_DIR) -lpevsl
iterobj       = $(EVSL_DIR)/EXTERNAL/ITERSOL/chebiter.o


#  The platform identifier to suffix to the end of library names
#
PLAT          = popper

# lapack and blas
#MKLPATH   =  /apps/rhel6/intel/composer_xe_2013.3.163/mkl/lib/intel64
LINKS     = -lopenblas -lpthread
#LINKS     := /home/shi126/solver/OpenBLAS/libopenblas.a


IMETIS = -I/usr/include
IPARMETIS = -I/usr/include/parmetis

#------------------------------------------------------------------
# links of metis
#
LMETIS    = -L/usr/lib/x86_64-linux-gnu/libmetis.so -lmetis
LParMETIS = -L/usr/lib/x86_64-linux-gnu/libparmetis.so -lparmetis
LORDERINGS = $(LParMETIS) $(LMETIS) -lpthread
OPTL     =  -O3 -fopenmp

#-----------------------------------------------------------------

#FDEBUG = -O0 -c -g -fbacktrace
FDEBUG = -c

#  Make our own suffixes' list.
#
.SUFFIXES:
.SUFFIXES:	.f	.o
.SUFFIXES:	.F	.f
.SUFFIXES:	.f90	.o
#
#  Default command.
#
.DEFAULT:
	@$(ECHO) "Unknown target $@, try:  make help"

#
#  Command to build .o files from .f files.
#
.f90.o:
	@$(ECHO) Making $@ from $<
	@$(FC) -c $(FIFLAGS) $<

FC	= mpif90
FFLAGS	= -O3 #-cg89

# Set the parallel fortran compiler
PFC     = mpif90 #mpif90 #mpiifort
PFFLAGS = -O #-cg89

PCC      = mpicc

LDFLAGS = $(LINKS)
CD	= cd
AR      = ar

CHMOD	 = chmod
CHFLAGS	 = -f

COMPRESS = compress

CP	 = cp

#  To find the path for cpp, try `man cpp', and it should list the path
#  at the top, under `Syntax'.  It is usually in /lib.
CPP	 = /lib/cpp
CPPFLAGS =

ECHO	 = echo

LN	 = ln
LNFLAGS	 = -s

MAKE	 = /usr/bin/make

MKDIR	 = mkdir
MDFLAGS	 = -p

MV	 = mv
MVFLAGS	 = -f

RM	 = rm
RMFLAGS  = -f

SHELL	 = /bin/sh

TAR	 = tar

#  For System V based machine without ranlib, like Cray and SGI,
#  use touch instead.
#RANLIB   = touch
RANLIB   = ranlib

